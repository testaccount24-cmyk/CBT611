/*REXX*/
address ispexec
"CONTROL ERRORS RETURN"
arg jbname

Call inittool

"VGET ( tabldsn ) ASIS"

"LIBDEF ISPTLIB DATASET ID('"tabldsn"') UNCOND"
if rc \= 0 then do
    say 'S-> LIBDEF failed on DD ISPTLIB. RC = ' rc
    say "S-> Dataset name = '" tabldsn "'"
    say 'S-> Terminating application'
    exit
end
"LIBDEF ISPTABL DATASET ID('"tabldsn"') UNCOND"
if rc \= 0 then do
    say 'S-> LIBDEF failed on DD ISPTABL. RC = ' rc
    say "S-> Dataset name = '" tabldsn "'"
    say 'S-> Terminating application'
    exit
end
address tso
TCB     = PTR(540,4)
JSCB    = PTR(TCB+180,4)
JCT     = ADJ(PTR(JSCB+260,4))
abcode  = stg(jct+168,4)
abcode  = c2x(abcode)
runingjb = jbname
JSCB    = PTR(JSCB+348,4)
SSIB    = PTR(JSCB+316,4)
JCT     = ADJ(PTR(JSCB+260,4))
ACTIVE  = ADJ(PTR(JSCB+328,4))
CURRENT = ADJ(PTR(JCT+32,3))
DO FOREVER
   IF CURRENT = 0 | CURRENT = ACTIVE THEN LEAVE
   STEP_RC = STRIP(PTR(CURRENT+8,2))
   say 'Step rc' Step_rc
   If STEP_RC >= 8  then leave
   STEP_PROC = STRIP(STG(CURRENT+44,8))
   IF STEP_PROC = "" THEN STEP_NAME = STRIP(STG(CURRENT+52,8))
   ELSE STEP_NAME = STEP_PROC||"."||STRIP(STG(CURRENT+52,8))
   CURRENT = ADJ(PTR(CURRENT+20,3))
END
address ispexec
"TBOPEN "jbsttbl "WRITE"
openrc = rc
Do While openrc = 12
    Call Wait_period 15
    "TBOPEN "jbsttbl "WRITE"
    openrc = rc
end
"TBSARG" jbsttbl "NAMECOND(runingjb,EQ)"
"TBTOP"  jbsttbl
"TBSCAN" jbsttbl "ARGLIST(runingjb)"
if rc \= 0 then do
   Say "S -> Scan failed on table"jbsttbl "rc="rc
   Signal main_exit
end
if abcode = '00000000' & step_rc < 8 then do
    jbstatus = 'C'
end
else do
    if step_rc = 28 then do
        jbstatus = 'C'
    end
    else do
        jbstatus = 'A'
    end
end
"TBPUT " jbsttbl
main_exit:
"TBCLOSE "jbsttbl
"libdef isptlib"
"libdef isptabl"
exit
Wait_period:
    Arg seconds
    Call syscalls('ON')
    address syscall
    "sleep "seconds
    call syscalls('OFF')
return
PTR: RETURN C2D(STORAGE(D2X(ARG(1)),ARG(2)))
STG: RETURN STORAGE(D2X(ARG(1)),ARG(2))
ADJ: IF ARG(1) = 0 THEN RETURN ARG(1) ; ELSE RETURN ARG(1) + 16
